// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jankenpon.proto

package jankenpon

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's option.
type ClientOption struct {
	Request              string   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientOption) Reset()         { *m = ClientOption{} }
func (m *ClientOption) String() string { return proto.CompactTextString(m) }
func (*ClientOption) ProtoMessage()    {}
func (*ClientOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_325ae85f6b83a6b6, []int{0}
}

func (m *ClientOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientOption.Unmarshal(m, b)
}
func (m *ClientOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientOption.Marshal(b, m, deterministic)
}
func (m *ClientOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientOption.Merge(m, src)
}
func (m *ClientOption) XXX_Size() int {
	return xxx_messageInfo_ClientOption.Size(m)
}
func (m *ClientOption) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientOption.DiscardUnknown(m)
}

var xxx_messageInfo_ClientOption proto.InternalMessageInfo

func (m *ClientOption) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

// The response message containing the result.
type Result struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_325ae85f6b83a6b6, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientOption)(nil), "jankenpon.ClientOption")
	proto.RegisterType((*Result)(nil), "jankenpon.Result")
}

func init() { proto.RegisterFile("jankenpon.proto", fileDescriptor_325ae85f6b83a6b6) }

var fileDescriptor_325ae85f6b83a6b6 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x4a, 0xcc, 0xcb,
	0x4e, 0xcd, 0x2b, 0xc8, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x69, 0x70, 0xf1, 0x38, 0xe7, 0x64, 0xa6, 0xe6, 0x95, 0xf8, 0x17, 0x94, 0x64, 0xe6, 0xe7, 0x09,
	0x49, 0x70, 0xb1, 0x17, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0xc1, 0xb8, 0x4a, 0x0a, 0x5c, 0x6c, 0x41, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x42, 0x62, 0x5c,
	0x6c, 0x45, 0x60, 0x16, 0x54, 0x09, 0x94, 0x67, 0xe4, 0xc8, 0xc5, 0xe2, 0x9e, 0x98, 0x9b, 0x2a,
	0x64, 0xc9, 0xc5, 0x09, 0xa2, 0x83, 0x4b, 0x12, 0x8b, 0x4a, 0x84, 0xc4, 0xf5, 0x10, 0xb6, 0x23,
	0xdb, 0x24, 0x25, 0x88, 0x24, 0x01, 0x31, 0x58, 0x89, 0xc1, 0x49, 0x9b, 0x4b, 0x26, 0x33, 0x5f,
	0x2f, 0xbd, 0xa8, 0x20, 0x19, 0x49, 0x36, 0x23, 0x35, 0x27, 0x27, 0xbf, 0x3c, 0xbf, 0x28, 0x27,
	0xc5, 0x89, 0xd3, 0x0b, 0x26, 0x1a, 0xc0, 0x98, 0xc4, 0x06, 0xf6, 0x8d, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xca, 0xe0, 0x2b, 0x96, 0xe0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameClient is the client API for Game service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameClient interface {
	GameStart(ctx context.Context, in *ClientOption, opts ...grpc.CallOption) (*Result, error)
}

type gameClient struct {
	cc *grpc.ClientConn
}

func NewGameClient(cc *grpc.ClientConn) GameClient {
	return &gameClient{cc}
}

func (c *gameClient) GameStart(ctx context.Context, in *ClientOption, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/jankenpon.Game/GameStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServer is the server API for Game service.
type GameServer interface {
	GameStart(context.Context, *ClientOption) (*Result, error)
}

// UnimplementedGameServer can be embedded to have forward compatible implementations.
type UnimplementedGameServer struct {
}

func (*UnimplementedGameServer) GameStart(ctx context.Context, req *ClientOption) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameStart not implemented")
}

func RegisterGameServer(s *grpc.Server, srv GameServer) {
	s.RegisterService(&_Game_serviceDesc, srv)
}

func _Game_GameStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientOption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GameStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jankenpon.Game/GameStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GameStart(ctx, req.(*ClientOption))
	}
	return interceptor(ctx, in, info, handler)
}

var _Game_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jankenpon.Game",
	HandlerType: (*GameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameStart",
			Handler:    _Game_GameStart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jankenpon.proto",
}
